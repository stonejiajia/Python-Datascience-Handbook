
#+TITLE:Operating on Data in Pandas

* Ufuncs: Index Presevation
#+BEGIN_SRC ipython :session :exports both  
  import matplotlib.pyplot as plt
  %matplotlib inline
  import pandas as pd
  import numpy as np
  import seaborn as sns
  from tabulate import tabulate




  rng = np.random.RandomState(42)
  ser = pd.Series(rng.randint(0, 10, 4))
  ser

#+END_SRC

#+RESULTS:
: 0    6
: 1    3
: 2    7
: 3    4
: dtype: int64

#+BEGIN_SRC ipython :session :results output raw :exports both  
  df = pd.DataFrame(rng.randint(0, 10, (3, 4)),
                    columns=['A', 'B', 'C', 'D'])
  
  print(tabulate(df, headers="keys", tablefmt="orgtbl"))
#+END_SRC

#+RESULTS:
|   | A | B | C | D |
|---+---+---+---+---|
| 0 | 6 | 9 | 2 | 6 |
| 1 | 7 | 4 | 3 | 7 |
| 2 | 7 | 2 | 5 | 4 |
* UFuncs: Index Alignment

#+BEGIN_SRC ipython :session :exports both  
area = pd.Series({'Alaska': 1723337, 'Texas': 695662,
                  'California': 423967}, name='area')
population = pd.Series({'California': 38332521, 'Texas': 26448193,
                        'New York': 19651127}, name='population')
#+END_SRC

#+RESULTS:

#+BEGIN_SRC ipython :session :exports both  
population / area

#+END_SRC

#+RESULTS:
: Alaska              NaN
: California    90.413926
: New York            NaN
: Texas         38.018740
: dtype: float64

#+BEGIN_SRC ipython :session :exports both  
area.index | population.index
#+END_SRC

#+RESULTS:
: Index(['Alaska', 'California', 'New York', 'Texas'], dtype='object')

#+BEGIN_SRC ipython :session :exports both  
  A = pd.Series([2, 4, 6], index=[0, 1, 2])
  B = pd.Series([1, 3, 5], index=[1, 2, 3])
  A + B
#+END_SRC

#+RESULTS:
: 0    NaN
: 1    5.0
: 2    9.0
: 3    NaN
: dtype: float64

#+BEGIN_SRC ipython :session :exports both  
  A.add(B, fill_value=0)
#+END_SRC

#+RESULTS:
: 0    2.0
: 1    5.0
: 2    9.0
: 3    5.0
: dtype: float64

* Index alignment in DataFrame

#+BEGIN_SRC ipython :session :results output raw :exports both  
  A = pd.DataFrame(rng.randint(0, 20, (2, 2)),
                   columns=list('AB'))

 
  print(tabulate(A, headers="keys", tablefmt="orgtbl"))
#+END_SRC

#+RESULTS:
|   |  A |  B |
|---+----+----|
| 0 |  0 | 11 |
| 1 | 11 | 16 |

#+BEGIN_SRC ipython :session :results output raw :exports both  
  B = pd.DataFrame(rng.randint(0, 10, (3, 3)),
                   columns=list('BAC'))
  
  print(tabulate(B, headers="keys", tablefmt="orgtbl"))
#+END_SRC

#+RESULTS:
|   | B | A | C |
|---+---+---+---|
| 0 | 9 | 2 | 6 |
| 1 | 3 | 8 | 2 |
| 2 | 4 | 2 | 6 |

#+BEGIN_SRC ipython :session :results output raw :exports both  

print(tabulate(A+B, headers="keys", tablefmt="orgtbl"))
#+END_SRC

#+RESULTS:
|   |   A |   B |   C |
|---+-----+-----+-----|
| 0 |   2 |  20 | nan |
| 1 |  19 |  19 | nan |
| 2 | nan | nan | nan |

#+BEGIN_SRC ipython :session :results output raw :exports both  
fill = A.stack().mean()
A.pow(B, fill_value=fill)

print(tabulate(A.pow(B, fill_value=fill), headers="keys", tablefmt="orgtbl"))
#+END_SRC

#+RESULTS:
|   |           A |           B |      C |
|---+-------------+-------------+--------|
| 0 |           0 | 2.35795e+09 | 735092 |
| 1 | 2.14359e+08 |        4096 |  90.25 |
| 2 |       90.25 |     8145.06 | 735092 |

* Ufuncs: Operation Between DataFrame and Series
#+BEGIN_SRC ipython :session :exports both  
  A = rng.randint(10, size=(3, 4))
  A
#+END_SRC

#+RESULTS:
: array([[4, 8, 6, 1],
:        [3, 8, 1, 9],
:        [8, 9, 4, 1]])

#+BEGIN_SRC ipython :session :exports both  
  A - A[0]
#+END_SRC

#+RESULTS:
: array([[ 0,  0,  0,  0],
:        [-1,  0, -5,  8],
:        [ 4,  1, -2,  0]])

#+BEGIN_SRC ipython :session :results output raw :exports both  
  df = pd.DataFrame(A, columns=list('QRST'))
  
  print(tabulate(df, headers="keys", tablefmt="orgtbl"))
#+END_SRC

#+RESULTS:
|   | Q | R | S | T |
|---+---+---+---+---|
| 0 | 4 | 8 | 6 | 1 |
| 1 | 3 | 8 | 1 | 9 |
| 2 | 8 | 9 | 4 | 1 |

#+BEGIN_SRC ipython :session :results output raw :exports both  

print(tabulate(df - df.iloc[0], headers="keys", tablefmt="orgtbl"))
#+END_SRC

#+RESULTS:
|   | A |  B | C |  D |
|---+---+----+---+----|
| 0 | 0 |  0 | 0 |  0 |
| 1 | 1 | -5 | 1 |  1 |
| 2 | 1 | -7 | 3 | -2 |

#+BEGIN_SRC ipython :session :results output raw :exports both  

print(tabulate(df.subtract(df['R'], axis=0), headers="keys", tablefmt="orgtbl"))
#+END_SRC

#+RESULTS:
|   |  Q | R |  S |  T |
|---+----+---+----+----|
| 0 | -4 | 0 | -2 | -7 |
| 1 | -5 | 0 | -7 |  1 |
| 2 | -1 | 0 | -5 | -8 |

#+BEGIN_SRC ipython :session :exports both  
  halfrow = df.iloc[0, ::2]
  halfrow
#+END_SRC

#+RESULTS:
: Q    4
: S    6
: Name: 0, dtype: int64

#+BEGIN_SRC ipython :session :exports both  
  df - halfrow
#+END_SRC

#+RESULTS:
:      Q   R    S   T
: 0  0.0 NaN  0.0 NaN
: 1 -1.0 NaN -5.0 NaN
: 2  4.0 NaN -2.0 NaN

#+BEGIN_SRC ipython :session :exports both  
  halfrow.keys()
#+END_SRC

#+RESULTS:
: Index(['Q', 'S'], dtype='object')


